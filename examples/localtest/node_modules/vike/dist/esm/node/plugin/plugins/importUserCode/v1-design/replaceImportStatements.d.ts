export { replaceImportStatements };
export { parseImportData };
export { isImportData };
export type { FileImport };
export type { ImportData };
type FileImport = {
    importStatementCode: string;
    importString: string;
    importLocalName: string;
};
declare function replaceImportStatements(code: string, filePathToShowToUser: string): {
    noImportStatement: true;
} | {
    noImportStatement: false;
    code: string;
    fileImports: FileImport[];
};
/**
 * Data Structure holding info about import statement:
 *   `import { someExport as someImport } from './some-file'`
 * <=>
 *   `importData === {`
 *      `importPath: './some-file',`
 *      `exportName: 'someExport',`
 *      `importString: 'import:./some-file:someExport',`
 *      `importStringWasGenerated: true,`
 *    `}`
 * We discard the import name `someImport` because we don't need it.
 */
type ImportData = {
    importPath: string;
    exportName: string;
    importString: string;
    importStringWasGenerated: boolean;
};
declare function isImportData(str: string): boolean;
declare function parseImportData(importString: string): null | ImportData;
declare module 'estree' {
    interface BaseNodeWithoutComments {
        start: number;
        end: number;
    }
}
