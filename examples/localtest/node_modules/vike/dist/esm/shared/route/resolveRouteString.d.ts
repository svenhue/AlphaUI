export { resolveRouteString };
export { getUrlFromRouteString };
export { isStaticRouteString };
export { analyzeRouteString };
export { assertRouteString };
export { parseRouteString };
declare function assertRouteString(routeString: string, errPrefix?: `${string}Invalid` | `${string}invalid`): void;
declare function resolveRouteString(routeString: string, urlPathname: string): null | {
    routeParams: Record<string, string>;
};
type Segment = {
    glob: true;
    /** Make route /a/* match URL /a */
    isLastDir?: true;
    static?: undefined;
    param?: undefined;
} | {
    glob?: undefined;
    static: string;
    param?: undefined;
} | {
    glob?: undefined;
    static?: undefined;
    param: string;
};
declare function parseRouteString(routeString: string): Segment[];
declare function getUrlFromRouteString(routeString: string): null | string;
declare function analyzeRouteString(routeString: string): {
    numberOfStaticPartsBeginning: number;
    numberOfStaticParts: number;
    numberOfParams: number;
    numberOfGlobs: number;
};
declare function isStaticRouteString(routeString: string): boolean;
