"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.replacerWithPath = void 0;
// https://stackoverflow.com/questions/61681176/json-stringify-replacer-how-to-get-full-path/63957172#63957172
const isKeyDotNotationCompatible_1 = require("./isKeyDotNotationCompatible");
function replacerWithPath(replacer, canBeFirstKey) {
    const paths = new WeakMap();
    return function (key, value) {
        const prefix = paths.get(this);
        const path = (prefix !== null && prefix !== void 0 ? prefix : '') + (key ? getPropAccessNotation(key, this, !prefix && canBeFirstKey) : '');
        if (isIterable(value))
            paths.set(value, path);
        return replacer.call(this, key, value, path);
    };
}
exports.replacerWithPath = replacerWithPath;
function isIterable(value) {
    return value === Object(value);
}
function getPropAccessNotation(key, obj, isFirstKey) {
    if (Array.isArray(obj))
        return `[${key}]`;
    if ((0, isKeyDotNotationCompatible_1.isKeyDotNotationCompatible)(key))
        return !isFirstKey ? `.${key}` : key; // Dot notation
    return `[${JSON.stringify(key)}]`; // Bracket notation
}
